Trait --> untuk mengurangi beberapa keterbatasan warisan tunggal dengan memungkinkan pengembang untuk menggunakan kembali set metode bebas di beberapa kelas independen yang tinggal di hierarki kelas yang berbeda. 
Ciri-ciri trait --> mekanisme untuk menggunakan kembali kode dalam bahasa warisan tunggal seperti PHP.
Semantik kombinasi Traits dan kelas didefinisikan dengan cara yang mengurangi kompleksitas, dan menghindari masalah-masalah khas yang terkait dengan beberapa warisan dan mixin. Trait mirip dengan kelas, tetapi hanya untuk fungsi kelompok dengan cara halus dan konsisten. Hal ini tidak mungkin untuk instantiate Trait sendiri. Ini adalah tambahan warisan tradisional dan memungkinkan komposisi horizontal perilaku, yaitu penerapan anggota kelas tanpa memerlukan warisan.

Contoh :
<?php 
trait ezcReflectionReturnInfo { 
function getReturnType () { /*1*/ } 
function getReturnDescription () { /*2*/ } 
} 

class ezcReflectionMethod extends ReflectionMethod { 
use ezcReflectionReturnInfo ; 
/* ... */ 
} 

class ezcReflectionFunction extends ReflectionFunction { 
use ezcReflectionReturnInfo ; 
/* ... */ 
} 
?>